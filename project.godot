; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Reference",
"class": "BaseTask",
"language": "GDScript",
"path": "res://source/tasks/base_task.gd"
}, {
"base": "Node",
"class": "CirculationNode",
"language": "GDScript",
"path": "res://source/circulation/node.gd"
}, {
"base": "Reference",
"class": "CurrentQueue",
"language": "GDScript",
"path": "res://source/helpers/current_queue.gd"
}, {
"base": "CirculationNode",
"class": "Limb",
"language": "GDScript",
"path": "res://source/circulation/limb.gd"
}, {
"base": "Sprite",
"class": "LimbHealth",
"language": "GDScript",
"path": "res://source/circulation/limb_health.gd"
}, {
"base": "Reference",
"class": "PlayerInput",
"language": "GDScript",
"path": "res://source/helpers/player_input.gd"
}, {
"base": "Reference",
"class": "Task",
"language": "GDScript",
"path": "res://source/tasks/task.gd"
}, {
"base": "Reference",
"class": "TaskQueue",
"language": "GDScript",
"path": "res://source/tasks/task_queue.gd"
}, {
"base": "CirculationNode",
"class": "Vein",
"language": "GDScript",
"path": "res://source/circulation/vein.gd"
}, {
"base": "Sprite",
"class": "VeinIn",
"language": "GDScript",
"path": "res://source/circulation/vein_in.gd"
}, {
"base": "Sprite",
"class": "VeinOut",
"language": "GDScript",
"path": "res://source/circulation/vein_out.gd"
} ]
_global_script_class_icons={
"BaseTask": "",
"CirculationNode": "",
"CurrentQueue": "",
"Limb": "",
"LimbHealth": "",
"PlayerInput": "",
"Task": "",
"TaskQueue": "",
"Vein": "",
"VeinIn": "",
"VeinOut": ""
}

[application]

config/name="pump-it"
run/main_scene="res://source/menus/menu_start.tscn"
config/icon="res://icon.png"

[autoload]

WebBuild="*res://source/autoloads/web_build.gd"
Event="*res://source/autoloads/event.gd"
Globals="*res://source/autoloads/globals.gd"
FileManager="*res://source/autoloads/file_manager.gd"
SettingsManager="*res://source/autoloads/settings_manager.gd"
Logger="*res://source/autoloads/logger.gd"
Time="*res://source/autoloads/time.gd"
PhysicsTime="*res://source/autoloads/physics_time.gd"
SceneManager="*res://source/autoloads/scene_manager.tscn"
TaskManager="*res://source/autoloads/task_manager.gd"
MenuMusic="*res://source/autoloads/menu_music.tscn"
AudioManager="*res://source/autoloads/audio_manager.gd"

[display]

window/size/width=1280
window/size/height=720
window/size/resizable=false
window/size/test_width=1280
window/size/test_height=720
window/stretch/mode="viewport"
window/stretch/aspect="keep"

[importer_defaults]

texture={
"compress/bptc_ldr": 0,
"compress/hdr_mode": 0,
"compress/lossy_quality": 0.7,
"compress/mode": 0,
"compress/normal_map": 0,
"detect_3d": false,
"flags/anisotropic": false,
"flags/filter": false,
"flags/mipmaps": false,
"flags/repeat": 0,
"flags/srgb": 2,
"process/HDR_as_SRGB": false,
"process/fix_alpha_border": true,
"process/invert_color": false,
"process/premult_alpha": false,
"size_limit": 0,
"stream": false,
"svg/scale": 1.0
}

[input]

pressed={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":1,"pressed":false,"doubleclick":false,"script":null)
 ]
}

[rendering]

quality/2d/use_pixel_snap=true
environment/default_environment="res://default_env.tres"
